@import "tailwindcss";
@import "open-color/open-color.css";
@import "@tmible/wishlist-ui/open-color.css";

@source "../node_modules/@tmible/wishlist-ui";

@plugin "@tailwindcss/typography";
@plugin "tailwindcss-animate";
@plugin "daisyui";

@plugin "daisyui/theme" {
  name: "light";
  --color-base-100: var(--oc-gray-0);
  --color-base-200: var(--oc-gray-1);
  --color-base-300: var(--oc-gray-2);
  --color-base-content: var(--oc-gray-8);
  --color-primary: #ff7514;
  --color-primary-content: var(--oc-gray-9);
  --color-neutral: var(--oc-gray-9);
  --color-neutral-content: var(--oc-gray-3);
  --color-error: var(--oc-red-6);
  --color-error-content: var(--oc-gray-9);
  --radius-box: 1rem;
  --radius-field: 0.5rem;
}

@plugin "daisyui/theme" {
  name: "dark";
  --color-base-100: var(--oc-gray-9);
  --color-base-200: var(--oc-gray-8);
  --color-base-300: var(--oc-gray-7);
  --color-base-content: var(--oc-gray-4);
  --color-primary: #ff7514;
  --color-primary-content: var(--oc-gray-9);
  --color-neutral: var(--oc-gray-4);
  --color-neutral-content: var(--oc-gray-9);
  --color-error: var(--oc-red-6);
  --color-error-content: var(--oc-gray-9);
  --radius-box: 1rem;
  --radius-field: 0.5rem;
}

@custom-variant dark (&:where([data-theme="dark"], [data-theme="dark"] *));

@theme {
  --color-placeholder: color-mix(in oklch, var(--color-base-content) 40%, #0000);
}

@layer base {
  @font-face {
    font-family: "Soyuz Grotesk";
    src:
      local("Soyuz Grotesk"),
      url("/fonts/soyuz-grotesk/Soyuz Grotesk Bold.otf") format("opentype"),
      url("/fonts/soyuz-grotesk/Soyuz Grotesk Bold.woff") format("woff");
    font-weight: bold;
    font-display: swap;
  }

  @font-face {
    font-family: "Involve";
    src:
      local("Involve"),
      url("/fonts/involve/Involve-VF.ttf") format("truetype"),
      url("/fonts/involve/Involve-Oblique-VF.ttf") format("truetype"),
      url("/fonts/involve/OTF/Involve-Bold.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-BoldOblique.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-Medium.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-MediumOblique.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-Oblique.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-Regular.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-SemiBold.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-SemiBoldOblique.otf") format("opentype"),
      url("/fonts/involve/TTF/Involve-Bold.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-BoldOblique.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-Medium.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-MediumOblique.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-Oblique.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-Regular.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-SemiBold.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-SemiBoldOblique.ttf") format("truetype");
    font-display: swap;
  }
}

@utility prose {
  blockquote p {
    &::before, &::after {
      @apply hidden;
    }
  }
}

:root {
  /* disable in favour of using bits-ui ScrollArea */
  scrollbar-gutter: auto;
}

body {
  font-family: "Involve";
}

h1, h2, h3, h4 {
  font-family: "Soyuz Grotesk";
}

.btn.skeleton {
  @apply pointer-events-none;
}

.prose {
  @apply max-w-[unset];
}

fieldset:has(input:required) > .fieldset-legend::after {
  content: "*";
  color: red;
}

span.spoiler {
  background-image: url("/C4Zf.gif");
  @apply hover:bg-none;
}

.modal-box {
  @apply max-md:w-full;
  @apply max-md:max-w-none;
  @apply max-md:h-full;
  @apply max-md:rounded-none;
}

body:has(.sortable-fallback) * {
  @apply cursor-grabbing;
}

.sortable-drag {
  @apply shadow-xl;
  @apply opacity-100;
  opacity: 1 !important;
  transform: rotate(7deg);
}

.sortable-ghost {
   @apply opacity-50;
 }

 @keyframes invisible {
  0% {
    visibility: visible;
  }
  100% {
    visibility: hidden;
  }
}

.invisible {
  animation-duration: var(--tw-duration, var(--default-transition-duration));
  animation-fill-mode: forwards;
  animation-name: invisible;
}
