@import "tailwindcss";
@plugin "@tailwindcss/typography";
@plugin "daisyui";
@import "open-color/open-color.css";
@plugin "daisyui/theme" {
  name: "light";
  --color-base-100: var(--oc-gray-0);
  --color-base-200: var(--oc-gray-1);
  --color-base-300: var(--oc-gray-2);
  --color-base-content: var(--oc-gray-8);
  --color-primary: #ff7514;
  --color-primary-content: var(--oc-gray-9);
  --color-neutral: var(--oc-gray-9);
  --color-neutral-content: var(--oc-gray-3);
  --color-error: var(--oc-red-6);
  --color-error-content: var(--oc-gray-9);
  --radius-box: 1rem;
  --radius-field: 0.5rem;
}
@plugin "daisyui/theme" {
  name: "dark";
  --color-base-100: var(--oc-gray-9);
  --color-base-200: var(--oc-gray-8);
  --color-base-300: var(--oc-gray-7);
  --color-base-content: var(--oc-gray-4);
  --color-primary: #ff7514;
  --color-primary-content: var(--oc-gray-9);
  --color-neutral: var(--oc-gray-4);
  --color-neutral-content: var(--oc-gray-9);
  --color-error: var(--oc-red-6);
  --color-error-content: var(--oc-gray-9);
  --radius-box: 1rem;
  --radius-field: 0.5rem;
}

@custom-variant dark (&:where([data-theme="dark"], [data-theme="dark"] *));

@theme {
  --color-white: var(--oc-white);
  --color-black: var(--oc-black);
  --color-gray-0: var(--oc-gray-0);
  --color-gray-1: var(--oc-gray-1);
  --color-gray-2: var(--oc-gray-2);
  --color-gray-3: var(--oc-gray-3);
  --color-gray-4: var(--oc-gray-4);
  --color-gray-5: var(--oc-gray-5);
  --color-gray-6: var(--oc-gray-6);
  --color-gray-7: var(--oc-gray-7);
  --color-gray-8: var(--oc-gray-8);
  --color-gray-9: var(--oc-gray-9);
  --color-red-0: var(--oc-red-0);
  --color-red-1: var(--oc-red-1);
  --color-red-2: var(--oc-red-2);
  --color-red-3: var(--oc-red-3);
  --color-red-4: var(--oc-red-4);
  --color-red-5: var(--oc-red-5);
  --color-red-6: var(--oc-red-6);
  --color-red-7: var(--oc-red-7);
  --color-red-8: var(--oc-red-8);
  --color-red-9: var(--oc-red-9);
  --color-pink-0: var(--oc-pink-0);
  --color-pink-1: var(--oc-pink-1);
  --color-pink-2: var(--oc-pink-2);
  --color-pink-3: var(--oc-pink-3);
  --color-pink-4: var(--oc-pink-4);
  --color-pink-5: var(--oc-pink-5);
  --color-pink-6: var(--oc-pink-6);
  --color-pink-7: var(--oc-pink-7);
  --color-pink-8: var(--oc-pink-8);
  --color-pink-9: var(--oc-pink-9);
  --color-grape-0: var(--oc-grape-0);
  --color-grape-1: var(--oc-grape-1);
  --color-grape-2: var(--oc-grape-2);
  --color-grape-3: var(--oc-grape-3);
  --color-grape-4: var(--oc-grape-4);
  --color-grape-5: var(--oc-grape-5);
  --color-grape-6: var(--oc-grape-6);
  --color-grape-7: var(--oc-grape-7);
  --color-grape-8: var(--oc-grape-8);
  --color-grape-9: var(--oc-grape-9);
  --color-violet-0: var(--oc-violet-0);
  --color-violet-1: var(--oc-violet-1);
  --color-violet-2: var(--oc-violet-2);
  --color-violet-3: var(--oc-violet-3);
  --color-violet-4: var(--oc-violet-4);
  --color-violet-5: var(--oc-violet-5);
  --color-violet-6: var(--oc-violet-6);
  --color-violet-7: var(--oc-violet-7);
  --color-violet-8: var(--oc-violet-8);
  --color-violet-9: var(--oc-violet-9);
  --color-indigo-0: var(--oc-indigo-0);
  --color-indigo-1: var(--oc-indigo-1);
  --color-indigo-2: var(--oc-indigo-2);
  --color-indigo-3: var(--oc-indigo-3);
  --color-indigo-4: var(--oc-indigo-4);
  --color-indigo-5: var(--oc-indigo-5);
  --color-indigo-6: var(--oc-indigo-6);
  --color-indigo-7: var(--oc-indigo-7);
  --color-indigo-8: var(--oc-indigo-8);
  --color-indigo-9: var(--oc-indigo-9);
  --color-blue-0: var(--oc-blue-0);
  --color-blue-1: var(--oc-blue-1);
  --color-blue-2: var(--oc-blue-2);
  --color-blue-3: var(--oc-blue-3);
  --color-blue-4: var(--oc-blue-4);
  --color-blue-5: var(--oc-blue-5);
  --color-blue-6: var(--oc-blue-6);
  --color-blue-7: var(--oc-blue-7);
  --color-blue-8: var(--oc-blue-8);
  --color-blue-9: var(--oc-blue-9);
  --color-cyan-0: var(--oc-cyan-0);
  --color-cyan-1: var(--oc-cyan-1);
  --color-cyan-2: var(--oc-cyan-2);
  --color-cyan-3: var(--oc-cyan-3);
  --color-cyan-4: var(--oc-cyan-4);
  --color-cyan-5: var(--oc-cyan-5);
  --color-cyan-6: var(--oc-cyan-6);
  --color-cyan-7: var(--oc-cyan-7);
  --color-cyan-8: var(--oc-cyan-8);
  --color-cyan-9: var(--oc-cyan-9);
  --color-teal-0: var(--oc-teal-0);
  --color-teal-1: var(--oc-teal-1);
  --color-teal-2: var(--oc-teal-2);
  --color-teal-3: var(--oc-teal-3);
  --color-teal-4: var(--oc-teal-4);
  --color-teal-5: var(--oc-teal-5);
  --color-teal-6: var(--oc-teal-6);
  --color-teal-7: var(--oc-teal-7);
  --color-teal-8: var(--oc-teal-8);
  --color-teal-9: var(--oc-teal-9);
  --color-green-0: var(--oc-green-0);
  --color-green-1: var(--oc-green-1);
  --color-green-2: var(--oc-green-2);
  --color-green-3: var(--oc-green-3);
  --color-green-4: var(--oc-green-4);
  --color-green-5: var(--oc-green-5);
  --color-green-6: var(--oc-green-6);
  --color-green-7: var(--oc-green-7);
  --color-green-8: var(--oc-green-8);
  --color-green-9: var(--oc-green-9);
  --color-lime-0: var(--oc-lime-0);
  --color-lime-1: var(--oc-lime-1);
  --color-lime-2: var(--oc-lime-2);
  --color-lime-3: var(--oc-lime-3);
  --color-lime-4: var(--oc-lime-4);
  --color-lime-5: var(--oc-lime-5);
  --color-lime-6: var(--oc-lime-6);
  --color-lime-7: var(--oc-lime-7);
  --color-lime-8: var(--oc-lime-8);
  --color-lime-9: var(--oc-lime-9);
  --color-yellow-0: var(--oc-yellow-0);
  --color-yellow-1: var(--oc-yellow-1);
  --color-yellow-2: var(--oc-yellow-2);
  --color-yellow-3: var(--oc-yellow-3);
  --color-yellow-4: var(--oc-yellow-4);
  --color-yellow-5: var(--oc-yellow-5);
  --color-yellow-6: var(--oc-yellow-6);
  --color-yellow-7: var(--oc-yellow-7);
  --color-yellow-8: var(--oc-yellow-8);
  --color-yellow-9: var(--oc-yellow-9);
  --color-orange-0: var(--oc-orange-0);
  --color-orange-1: var(--oc-orange-1);
  --color-orange-2: var(--oc-orange-2);
  --color-orange-3: var(--oc-orange-3);
  --color-orange-4: var(--oc-orange-4);
  --color-orange-5: var(--oc-orange-5);
  --color-orange-6: var(--oc-orange-6);
  --color-orange-7: var(--oc-orange-7);
  --color-orange-8: var(--oc-orange-8);
  --color-orange-9: var(--oc-orange-9);
}

@layer base {
  @font-face {
    font-family: "Soyuz Grotesk";
    src:
      local("Soyuz Grotesk"),
      url("/fonts/soyuz-grotesk/Soyuz Grotesk Bold.otf") format("opentype"),
      url("/fonts/soyuz-grotesk/Soyuz Grotesk Bold.woff") format("woff");
    font-weight: bold;
    font-display: swap;
  }

  @font-face {
    font-family: "Involve";
    src:
      local("Involve"),
      url("/fonts/involve/Involve-VF.ttf") format("truetype"),
      url("/fonts/involve/Involve-Oblique-VF.ttf") format("truetype"),
      url("/fonts/involve/OTF/Involve-Bold.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-BoldOblique.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-Medium.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-MediumOblique.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-Oblique.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-Regular.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-SemiBold.otf") format("opentype"),
      url("/fonts/involve/OTF/Involve-SemiBoldOblique.otf") format("opentype"),
      url("/fonts/involve/TTF/Involve-Bold.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-BoldOblique.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-Medium.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-MediumOblique.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-Oblique.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-Regular.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-SemiBold.ttf") format("truetype"),
      url("/fonts/involve/TTF/Involve-SemiBoldOblique.ttf") format("truetype");
    font-display: swap;
  }
}

@utility prose {
  blockquote p {
    &::before, &::after {
      @apply hidden;
    }
  }
}

:root {
  /* comment out in favour of bits-ui setting body padding and --scrollbar-width */
  scrollbar-gutter: auto;
}

body {
  font-family: "Involve";
}

h1, h2, h3, h4 {
  font-family: "Soyuz Grotesk";
}

.btn.skeleton {
  @apply pointer-events-none;
}

.prose {
  max-width: unset;
}

fieldset:has(input:required) > .fieldset-legend::after {
  content: "*";
  color: red;
}

span.spoiler {
  background-image: url("/C4Zf.gif");
  background-repeat: no-repeat;
  background-size: cover;
  &:hover {
    background: none;
  }
}

.modal-box {
  @apply max-md:w-full;
  @apply max-md:max-w-none;
  @apply max-md:h-full;
  @apply max-md:rounded-none;
  transform: translateX(calc(var(--scrollbar-width) / -2));
}

body:has(.sortable-fallback) * {
  @apply cursor-grabbing;
}

.sortable-drag {
  @apply shadow-xl;
  @apply opacity-100;
  opacity: 1 !important;
  transform: rotate(7deg);
}

@keyframes invisible {
  0% {
    visibility: visible;
  }
  100% {
    visibility: hidden;
  }
}

.invisible {
  animation-duration: var(--tw-duration, var(--default-transition-duration));
  animation-fill-mode: forwards;
  animation-name: invisible;
}
