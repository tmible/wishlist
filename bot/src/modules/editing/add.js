import { Markup } from 'telegraf';
import { inject } from '@tmible/wishlist-bot/architecture/dependency-injector';
import Events from '@tmible/wishlist-bot/architecture/events';
import InjectionToken from '@tmible/wishlist-bot/architecture/injection-token';
import MessagePurposeType from '@tmible/wishlist-bot/constants/message-purpose-type';
import isChatGroup from '@tmible/wishlist-bot/helpers/is-chat-group';
import { sendMessageAndMarkItForMarkupRemove } from '@tmible/wishlist-bot/helpers/middlewares/remove-markup';
import ItemDescriptionPattern from './constants/item-description-pattern.const.js';
import ItemNamePattern from './constants/item-name-pattern.const.js';
import ItemPriorityPattern from './constants/item-priority-pattern.const.js';
import sendList from './helpers/send-list.js';

/**
 * @typedef {
 *   import('@tmible/wishlist-bot/architecture/configure-modules').ModuleConfigureFunction
 * } ModuleConfigureFunction
 * @typedef {
 *   import('@tmible/wishlist-bot/architecture/configure-modules').ModuleMessageHandler
 * } ModuleMessageHandler
 */

/** @type {ModuleConfigureFunction} */
const configure = (bot) => {
  /**
   * –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /add, –µ—Å–ª–∏ —á–∞—Ç –Ω–µ –≥—Ä—É–ø–ø–æ–≤–æ–π, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
   * –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–∞—Ä–∫–µ, –¥–æ–±–∞–≤–ª—è–µ–º–æ–º –≤ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π
   */
  bot.command('add', async (ctx) => {
    if (isChatGroup(ctx)) {
      return;
    }

    ctx.session.messagePurpose = { type: MessagePurposeType.AddItemToWishlist };
    await sendMessageAndMarkItForMarkupRemove(
      ctx,
      'replyWithMarkdownV2',
      '–û–ø–∏—à–∏—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n' +
      '>–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç\n>–Ω–∞–∑–≤–∞–Ω–∏–µ\n>–æ–ø–∏—Å–∞–Ω–∏–µ\n' +
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–∂–Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å',
      Markup.inlineKeyboard([ Markup.button.callback('üö´ –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å', 'cancel_add') ]),
    );
  });
};

/** @type {ModuleMessageHandler} */
const messageHandler = (bot) => {
  const eventBus = inject(InjectionToken.EventBus);

  /**
   * –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ,
   * –¥–æ–±–∞–≤–ª—è–µ–º–æ–º –≤ —Å–ø–∏—Å–æ–∫ –∂–µ–ª–∞–Ω–∏–π, –±–æ—Ç –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
   * –ü—Ä–∏ –ø—Ä–æ–≤–∞–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏.
   * –ü—Ä–∏ —É—Å–ø–µ—Ö–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–æ—Ç –≤—ã–ø—É—Å–∫–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   * –æ–± —É—Å–ø–µ—Ö–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ –∏ [–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫]{@link sendList}
   */
  bot.on('message', async (ctx, next) => {
    if (ctx.session.messagePurpose?.type === MessagePurposeType.AddItemToWishlist) {
      delete ctx.session.messagePurpose;

      /* eslint-disable
        security/detect-non-literal-regexp,
        security-node/non-literal-reg-expr --
        –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, —Ç–∞–∫ —á—Ç–æ —Ç—É—Ç –Ω–µ—Ç —É—è–∑–≤–∏–º–æ—Å—Ç–∏
      */
      const match = new RegExp(
        `^((?<priority>${ItemPriorityPattern})\n)?` +
        `(?<name>${ItemNamePattern})` +
        `(\n(?<description>${ItemDescriptionPattern}))?$`,
      ).exec(ctx.message.text);
      /* eslint-enable security/detect-non-literal-regexp, security-node/non-literal-reg-expr */

      if (!match) {
        await ctx.reply(
          '–û—à–∏–±–∫–∞ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ:\n' +
          '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ‚Äî —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0\n' +
          '–ù–∞–∑–≤–∞–Ω–∏–µ ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫\n' +
          '–û–ø–∏—Å–∞–Ω–∏–µ ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º',
        );
        return;
      }

      eventBus.emit(
        Events.Editing.AddItem,
        [
          ctx.from.id,
          Number.parseInt(match.groups.priority ?? 1),
          match.groups.name,
          match.groups.description ?? '',
        ],
        ctx.message.entities,
        (match[1] ?? '').length + match[3].length + 1,
      );

      await ctx.reply('–î–æ–±–∞–≤–ª–µ–Ω–æ!');
      await sendList(eventBus, ctx);
      return;
    }

    await next();
  });
};

export default { configure, messageHandler };
