import { Markup } from 'telegraf';
import MessagePurposeType from '@tmible/wishlist-bot/constants/message-purpose-type';
import { emit } from '@tmible/wishlist-bot/store/event-bus';
import Events from '@tmible/wishlist-bot/store/events';
import sendList from './helpers/send-list.js';
import initiateUpdate from './helpers/template-functions/initiate-update.js';

/**
 * @typedef {
 *   import('@tmible/wishlist-bot/helpers/configure-modules').ModuleConfigureFunction
 * } ModuleConfigureFunction
 * @typedef {
 *   import('@tmible/wishlist-bot/helpers/configure-modules').ModuleMessageHandler
 * } ModuleMessageHandler
 */

/** @type {ModuleConfigureFunction} */
const configure = (bot) => {
  /**
   * –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –¥–µ–π—Å—Ç–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ –∑–∞–ø—É—Å–∫
   * [—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∞—Ä–∫–µ]{@link initiateUpdate}
   */
  bot.action(/^update_description (\d+)$/, async (ctx) => {
    await initiateUpdate(
      ctx,
      MessagePurposeType.UpdateDescription,
      [
        '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ —Å—Ç—Ä–æ–∫ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º)',
        Markup.inlineKeyboard([
          Markup.button.callback('üö´ –ù–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ', 'cancel_update_description'),
        ]),
      ],
    );
  });
};

/** @type {ModuleMessageHandler} */
const messageHandler = (bot) => {
  /**
   * –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞,
   * —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç—Å—è.
   * –ü—Ä–∏ –ø—Ä–æ–≤–∞–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏.
   * –ü—Ä–∏ —É—Å–ø–µ—Ö–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–æ—Ç [–≤—ã–ø—É—Å–∫–∞–µ—Ç]{@link emit} —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ,
   * –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞
   * –∏ [–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ä–∞–Ω–µ–µ —Å–ø–∏—Å–æ–∫]{@link sendList}
   */
  bot.on('message', async (ctx, next) => {
    if (ctx.session.messagePurpose?.type === MessagePurposeType.UpdateDescription) {
      const itemId = ctx.session.messagePurpose.payload;

      delete ctx.session.messagePurpose;

      emit(Events.Editing.UpdateItemDescription, itemId, ctx.message.text, ctx.message.entities);

      await ctx.reply('–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!');
      return sendList(ctx);
    }

    return next();
  });
};

export default { configure, messageHandler };
