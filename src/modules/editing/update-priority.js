import { Markup } from 'telegraf';
import MessagePurposeType from '@tmible/wishlist-bot/constants/message-purpose-type';
import Events from '@tmible/wishlist-bot/store/events';
import ItemPriorityPattern from './constants/item-priority-pattern.const.js';
import initiateUpdate from './helpers/template-functions/initiate-update.js';
import updateValue from './helpers/template-functions/update-value.js';

/**
 * @typedef {
 *   import('@tmible/wishlist-bot/helpers/configure-modules').ModuleConfigureFunction
 * } ModuleConfigureFunction
 * @typedef {
 *   import('@tmible/wishlist-bot/helpers/configure-modules').ModuleMessageHandler
 * } ModuleMessageHandler
 */

/** @type {ModuleConfigureFunction} */
const configure = (bot) => {
  /**
   * –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –¥–µ–π—Å—Ç–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –ø–æ–¥–∞—Ä–∫–∞ –∑–∞–ø—É—Å–∫
   * [—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∞—Ä–∫–µ]{@link initiateUpdate}
   */
  bot.action(/^update_priority (\d+)$/, async (ctx) => {
    await initiateUpdate(
      ctx,
      MessagePurposeType.UpdatePriority,
      [
        '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0)',
        Markup.inlineKeyboard([
          Markup.button.callback('üö´ –ù–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç', 'cancel_update_priority'),
        ]),
      ],
    );
  });
};

/** @type {ModuleMessageHandler} */
const messageHandler = (bot) => {
  /**
   * –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ–¥–∞—Ä–∫–∞, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
   * [—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–∞—Ä–∫–µ]{@link updateValue}.
   */
  bot.on('message', async (ctx, next) => {
    await updateValue(
      ctx,
      MessagePurposeType.UpdatePriority,
      /* eslint-disable-next-line
        security/detect-non-literal-regexp,
        security-node/non-literal-reg-expr --
        –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, —Ç–∞–∫ —á—Ç–æ —Ç—É—Ç –Ω–µ—Ç —É—è–∑–≤–∏–º–æ—Å—Ç–∏
      */
      new RegExp(`^${ItemPriorityPattern}$`),
      '–û—à–∏–±–∫–∞ –≤ –∑–Ω–∞—á–µ–Ω–∏–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞. –ù–µ –º–æ–≥—É –æ–±–Ω–æ–≤–∏—Ç—å',
      Events.Editing.UpdateItemPriority,
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω!',
    );

    return next();
  });
};

export default { configure, messageHandler };
