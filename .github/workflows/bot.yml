name: Bot CI/CD

on:
  workflow_call:

jobs:

  changes:
    runs-on: ubuntu-latest
    outputs:
      bot: ${{ steps.filter.outputs.bot }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          bot:
            - 'bot/**'

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.bot == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/lint
      with:
        working-directory: bot

  tests:
    needs: changes
    if: ${{ needs.changes.outputs.bot == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/test
      with:
        working-directory: bot

  deploy:
    needs: [lint, tests]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: bot
    steps:
    - uses: actions/checkout@v4
    - name: remove tests
      run: |
        find ./src/ -type d -name __tests__ -exec rm -rf {} +
        rm -rf ./src/helpers/tests
    - name: remove unnecessary files
      run: |
        find . -mindepth 1 -maxdepth 1 \
          -type f -not \( -name 'package.json' \) -exec rm -rf {} + -or \
          -type d -not -name 'src' -exec rm -rf {} +
    - name: deploy
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        SOURCE: bot
        TARGET: ${{ secrets.REMOTE_TARGET }}
        SCRIPT_AFTER: |
          cd ${{ secrets.REMOTE_TARGET }}/bot
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
          # pnpm
          export PNPM_HOME="$HOME/.local/share/pnpm"
          case ":$PATH:" in
            *":$PNPM_HOME:"*) ;;
            *) export PATH="$PNPM_HOME:$PATH" ;;
          esac
          # pnpm end
          pnpm add -g pnpm@$(pnpm pkg get engines.pnpm | tr -d "\"")
          nvm install $(pnpm pkg get engines.node | tr -d "\"")
          pnpm pkg set dependencies.@tmible/wishlist-common=file:../common
          pnpm pkg delete devDependencies.@tmible/eslint-config-wishlist
          pnpm install --prod
          pnpm start:background
          pnpm restart:background
